load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("//release:release.bzl", "sha256")

# Run this target to update the go_* rules in this file
# bazel run //:gazelle
gazelle(name = "gazelle")

# Run this target to update the go.bzl file in this folder
# bazel run //:update_go_deps
gazelle(
    name = "update_go_deps",
    args = [
        "-from_file=go.mod",
        "-to_macro=go.bzl%deps",
        "-prune",
    ],
    command = "update-repos",
)

# gazelle:prefix github.com/aspect-build/aspect-cli-plugin-template
go_library(
    name = "aspect-cli-plugin-template_lib",
    srcs = ["plugin.go"],
    importpath = "github.com/aspect-build/aspect-cli-plugin-template",
    visibility = ["//:__subpackages__"],
    deps = [
        "@build_aspect_cli//bazel/buildeventstream",
        "@build_aspect_cli//bazel/command_line",
        "@build_aspect_cli//pkg/bazel",
        "@build_aspect_cli//pkg/ioutils",
        "@build_aspect_cli//pkg/plugin/sdk/v1alpha3/config",
        "@build_aspect_cli//pkg/plugin/sdk/v1alpha3/plugin",
        "@com_github_hashicorp_go_plugin//:go-plugin",
        "@com_github_manifoldco_promptui//:promptui",
    ],
)

# Only used for local development.
# Release binaries are created by the target in /release
go_binary(
    name = "aspect-cli-plugin-template",
    embed = [":aspect-cli-plugin-template_lib"],
    visibility = ["//visibility:public"],
)

sha256(
    name = "checksum",
    artifact = "plugin",
)

copy_file(
    name = "plugin",
    src = "aspect-cli-plugin-template",
    out = "plugin",
)